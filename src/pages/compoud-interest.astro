---

---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>Compound Interest Calculator</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style>
      /* Minimal styling */
      body {
        font-family: system-ui, sans-serif;
        line-height: 1.5;
        margin: 0;
        background: #f8fafc;
        color: #111;
      }

      /* Header */
      .page-header {
        text-align: center;
        margin: 2rem 0 0;
      }
      .page-title {
        font-size: 2rem;
        font-weight: 700;
        margin: 0;
      }
      .page-subtitle {
        font-size: 1rem;
        color: #334155;
        margin: 0.25rem 0 2rem;
      }

      /* layout for the two‑column section */
      .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
        display: grid;
        gap: 2rem;
        grid-template-columns: 1fr;
      }
      @media (min-width: 900px) {
        .container {
          grid-template-columns: 1fr 1fr;
        }
      }

      .card {
        background: #fff;
        border-radius: 1rem;
        box-shadow: 0 1px 4px rgba(0, 0, 0, 0.05);
        padding: 2rem;
      }
      h2 {
        margin-top: 0;
        font-size: 1.25rem;
      }
      label {
        display: block;
        font-weight: 600;
        margin-bottom: 0.25rem;
      }
      input,
      select {
        width: 100%;
        padding: 0.5rem 0.75rem;
        border: 1px solid #d1d5db;
        border-radius: 0.5rem;
      }

      /* stats blocks */
      .stats {
        display: grid;
        gap: 1rem;
      }
      .stat {
        background: linear-gradient(135deg, #5f6bff, #8f5dfd);
        border-radius: 1rem;
        color: #fff;
        padding: 1.5rem;
        text-align: center;
      }
      .stat h3 {
        margin: 0;
        font-size: 0.875rem;
        font-weight: 500;
        letter-spacing: 0.02em;
      }
      .stat p {
        margin: 0.25rem 0 0;
        font-size: 1.75rem;
        font-weight: 700;
      }

      canvas {
        width: 100%;
        max-height: 380px;
      }
      .info {
        cursor: help;
        margin-left: 0.25rem;
      }

      /* chart card spans full width */
      .chart-wrapper {
        max-width: 1200px;
        margin: 0 auto 4rem;
      }
    </style>
    <!-- Chart.js via CDN (UMD) -->
    <script
      defer
      src="https://cdn.jsdelivr.net/npm/chart.js@4.4.1/dist/chart.umd.min.js"
    ></script>
  </head>
  <body>
    <!-- Page Header -->
    <header class="page-header">
      <h1 class="page-title">Compound Interest Calculator</h1>
      <p class="page-subtitle">
        See how your money grows over time with the power of compound interest
      </p>
    </header>

    <!-- two‑column grid -->
    <div class="container">
      <!-- Input panel -->
      <form id="calc" class="card">
        <h2>Investment Details</h2>
        <div>
          <label for="principal"
            >Initial Investment ($)
            <span class="info" title="The lump‑sum amount you invest today"
              >ℹ️</span
            >
          </label>
          <input
            id="principal"
            type="number"
            step="0.01"
            value="10000"
            min="0"
          />
        </div>
        <div>
          <label for="rate"
            >Annual Interest Rate (%)
            <span class="info" title="Nominal interest rate before compounding"
              >ℹ️</span
            >
          </label>
          <input id="rate" type="number" step="0.01" value="7" min="0" />
        </div>
        <div>
          <label for="years"
            >Time Period (years)
            <span
              class="info"
              title="How long you plan to let the investment grow">ℹ️</span
            >
          </label>
          <input id="years" type="number" step="1" value="12" min="1" />
        </div>
        <div>
          <label for="frequency"
            >Compounding Frequency
            <span
              class="info"
              title="How many times per year the interest is added to the principal"
              >ℹ️</span
            >
          </label>
          <select id="frequency">
            <option value="1">Annually</option>
            <option value="4">Quarterly</option>
            <option value="12" selected>Monthly</option>
            <option value="365">Daily</option>
          </select>
        </div>
        <div>
          <label for="contribution"
            >Monthly Contribution ($)
            <span class="info" title="Optional extra amount you add each month"
              >ℹ️</span
            >
          </label>
          <input
            id="contribution"
            type="number"
            step="0.01"
            value="500"
            min="0"
          />
        </div>
      </form>

      <!-- Results panel -->
      <div class="card">
        <h2 class="sr-only">Results</h2>
        <div class="stats">
          <div class="stat"><h3>Final Amount</h3><p id="finalAmount">-</p></div>
          <div class="stat">
            <h3>Total Contributions</h3><p id="totalContrib">-</p>
          </div>
          <div class="stat">
            <h3>Interest Earned</h3><p id="interestEarned">-</p>
          </div>
          <div class="stat">
            <h3>Growth Multiple</h3><p id="growthMultiple">-</p>
          </div>
        </div>
      </div>
    </div>

    <!-- Full‑width chart below the two‑column grid -->
    <div class="card chart-wrapper">
      <canvas id="growthChart" height="300"></canvas>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const $ = id => document.getElementById(id);

        function computeData() {
          const P = parseFloat($("principal").value) || 0;
          const r = (parseFloat($("rate").value) || 0) / 100;
          const t = parseInt($("years").value) || 0;
          const n = parseInt($("frequency").value) || 1;
          const PMT = parseFloat($("contribution").value) || 0;

          const data = [];
          let totalContrib = 0;

          for (let year = 0; year <= t; year++) {
            const periods = n * year;
            const lumpSumFV = P * Math.pow(1 + r / n, periods);
            const annuityFV =
              PMT > 0
                ? PMT * ((Math.pow(1 + r / n, periods) - 1) / (r / n))
                : 0;
            const amount = lumpSumFV + annuityFV;
            if (year > 0) totalContrib += PMT * n;
            data.push({ year, amount });
          }
          return { data, final: data.at(-1).amount, totalContrib };
        }

        // initialise Chart.js after script loads
        const ctx = document.getElementById("growthChart").getContext("2d");
        const chart = new Chart(ctx, {
          type: "line",
          data: {
            labels: [],
            datasets: [
              {
                label: "Portfolio Value",
                data: [],
                tension: 0.25,
                borderWidth: 2,
              },
            ],
          },
          options: {
            responsive: true,
            plugins: {
              legend: { display: false },
              tooltip: {
                callbacks: {
                  label: c =>
                    c.parsed.y.toLocaleString(undefined, {
                      style: "currency",
                      currency: "USD",
                      maximumFractionDigits: 0,
                    }),
                },
              },
            },
            scales: {
              x: { title: { display: true, text: "Year" } },
              y: {
                title: { display: true, text: "Value (USD)" },
                ticks: { callback: v => "$" + (v / 1000).toFixed(0) + "k" },
              },
            },
          },
        });

        function recalc() {
          const { data, final, totalContrib } = computeData();
          $("finalAmount").textContent = final.toLocaleString(undefined, {
            style: "currency",
            currency: "USD",
          });
          $("totalContrib").textContent = totalContrib.toLocaleString(
            undefined,
            { style: "currency", currency: "USD" }
          );
          const interest =
            final - totalContrib - (parseFloat($("principal").value) || 0);
          $("interestEarned").textContent = interest.toLocaleString(undefined, {
            style: "currency",
            currency: "USD",
          });
          $("growthMultiple").textContent =
            (final / (parseFloat($("principal").value) || 1)).toFixed(2) + "x";

          chart.data.labels = data.map(d => d.year);
          chart.data.datasets[0].data = data.map(d => d.amount);
          chart.update();
        }

        $("calc").addEventListener("input", recalc);
        recalc();
      });
    </script>
  </body>
</html>
